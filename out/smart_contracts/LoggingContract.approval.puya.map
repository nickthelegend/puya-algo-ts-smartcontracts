{
  "version": 3,
  "sources": [
    "/workspaces/puya-algo-ts-smartcontracts/smart_contracts/Logging.algo.ts"
  ],
  "mappings": ";AA2BA;;AAAA;;;AAAA;;;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;;;AAiBA;;AAAA;AAAA;AAAA;;AAAA;AAjBA;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;;;AAiBA;;;AAAA;;;AATG;;AAAA;AAAA;AAAA;;AAAA;AAAA;AARH;;;AAAA;AAAA;;AAQG;;;AAAA;;;AAAD;;;AALE;;;;;;;;;;;;;;;;;AASA;;AAAA;;AAKJ;;;AACQ;;;;;;;;AAAJ;;AAAA;AAAyB;;;;;;;;;;AAAzB;AAAA;;AAAA;AAAA;AAAiD;;;;;;;;;AAAjD;AAAA;;AAAA;AAAA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "3": {
      "op": "bz main_after_if_else@8",
      "stack_out": []
    },
    "6": {
      "op": "pushbytess 0xda53fefe 0xbe6bfb89 // method \"createApplication(account)void\", method \"emit_log(string,application,string)void\"",
      "defined_out": [
        "Method(createApplication(account)void)",
        "Method(emit_log(string,application,string)void)"
      ],
      "stack_out": [
        "Method(createApplication(account)void)",
        "Method(emit_log(string,application,string)void)"
      ]
    },
    "18": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(createApplication(account)void)",
        "Method(emit_log(string,application,string)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(createApplication(account)void)",
        "Method(emit_log(string,application,string)void)",
        "tmp%2#0"
      ]
    },
    "21": {
      "op": "match main_createApplication_route@3 main_emit_log_route@4",
      "stack_out": []
    },
    "27": {
      "block": "main_after_if_else@8",
      "stack_in": [],
      "op": "pushint 0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "29": {
      "op": "return",
      "stack_out": []
    },
    "30": {
      "block": "main_emit_log_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "32": {
      "op": "!",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "33": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "34": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "36": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "37": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "40": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "43": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%1#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "reinterpret_bytes[1]%1#0"
      ]
    },
    "46": {
      "op": "btoi",
      "defined_out": [
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "47": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%14#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%16#0"
      ]
    },
    "49": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%14#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "52": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%14#0",
        "tmp%16#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%16#0",
        "tmp%18#0"
      ]
    },
    "55": {
      "callsub": "smart_contracts/Logging.algo.ts::LoggingContract.emit_log",
      "op": "callsub emit_log",
      "stack_out": []
    },
    "58": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "60": {
      "op": "return",
      "stack_out": []
    },
    "61": {
      "block": "main_createApplication_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "63": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "64": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "65": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "67": {
      "op": "!",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "68": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "69": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "72": {
      "op": "btoi",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "73": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "75": {
      "callsub": "smart_contracts/Logging.algo.ts::LoggingContract.createApplication",
      "op": "callsub createApplication",
      "stack_out": []
    },
    "78": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "80": {
      "op": "return",
      "stack_out": []
    },
    "81": {
      "subroutine": "smart_contracts/Logging.algo.ts::LoggingContract.createApplication",
      "params": {
        "ownerAddress#0": "bytes"
      },
      "block": "createApplication",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "84": {
      "op": "pushbytes \"MANAGER_ADDRESS\"",
      "defined_out": [
        "\"MANAGER_ADDRESS\""
      ],
      "stack_out": [
        "\"MANAGER_ADDRESS\""
      ]
    },
    "101": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"MANAGER_ADDRESS\"",
        "ownerAddress#0 (copy)"
      ],
      "stack_out": [
        "\"MANAGER_ADDRESS\"",
        "ownerAddress#0 (copy)"
      ]
    },
    "103": {
      "op": "app_global_put",
      "stack_out": []
    },
    "104": {
      "retsub": true,
      "op": "retsub"
    },
    "105": {
      "subroutine": "smart_contracts/Logging.algo.ts::LoggingContract.emit_log",
      "params": {
        "eventName#0": "bytes",
        "agentID#0": "uint64",
        "status#0": "bytes"
      },
      "block": "emit_log",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "108": {
      "op": "pushbytes \"event:\"",
      "defined_out": [
        "\"event:\""
      ],
      "stack_out": [
        "\"event:\""
      ]
    },
    "116": {
      "op": "frame_dig -3",
      "defined_out": [
        "\"event:\"",
        "eventName#0 (copy)"
      ],
      "stack_out": [
        "\"event:\"",
        "eventName#0 (copy)"
      ]
    },
    "118": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "119": {
      "op": "pushbytes \"agentID:\"",
      "defined_out": [
        "\"agentID:\"",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "\"agentID:\""
      ]
    },
    "129": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "130": {
      "op": "frame_dig -2",
      "defined_out": [
        "agentID#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "agentID#0 (copy)"
      ]
    },
    "132": {
      "op": "itob",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "133": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "134": {
      "op": "pushbytes \"status:\"",
      "defined_out": [
        "\"status:\"",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "\"status:\""
      ]
    },
    "143": {
      "op": "concat",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "144": {
      "op": "frame_dig -1",
      "defined_out": [
        "status#0 (copy)",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "status#0 (copy)"
      ]
    },
    "146": {
      "op": "concat",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "147": {
      "op": "log",
      "stack_out": []
    },
    "148": {
      "retsub": true,
      "op": "retsub"
    }
  }
}