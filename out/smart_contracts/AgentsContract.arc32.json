{
    "hints": {
        "createApplication(account)void": {
            "call_config": {
                "no_op": "CREATE"
            }
        },
        "createAgent(string,string,uint64,string)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "deleteAgent(uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "state": {
        "global": {
            "num_byte_slices": 1,
            "num_uints": 1
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "maintainerAddress": {
                    "type": "bytes",
                    "key": "maintainerAddress"
                },
                "number": {
                    "type": "uint64",
                    "key": "number"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "AgentsContract",
        "methods": [
            {
                "name": "createApplication",
                "args": [
                    {
                        "type": "account",
                        "name": "maintainerAddress"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "createAgent",
                "args": [
                    {
                        "type": "string",
                        "name": "agentName"
                    },
                    {
                        "type": "string",
                        "name": "agentIPFS"
                    },
                    {
                        "type": "uint64",
                        "name": "pricing"
                    },
                    {
                        "type": "string",
                        "name": "agentImage"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "deleteAgent",
                "args": [
                    {
                        "type": "uint64",
                        "name": "agentId"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {}
}